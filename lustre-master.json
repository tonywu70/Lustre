{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualMachineName": {
            "type": "String"
      },
      "virtualMachineSize": {
        "type": "string",
        "defaultValue": "Standard_DS3_v2",
        "allowedValues": [
          "Standard_DS1",
          "Standard_DS2",
          "Standard_DS3",
          "Standard_DS4",
          "Standard_DS11",
          "Standard_DS12",
          "Standard_DS13",
          "Standard_DS14",
          "Standard_DS1_v2",
          "Standard_DS2_v2",
          "Standard_DS3_v2",
          "Standard_DS4_v2",
          "Standard_DS5_v2",
          "Standard_DS11_v2",
          "Standard_DS12_v2",
          "Standard_DS13_v2",
          "Standard_DS14_v2",
          "Standard_DS15_v2",
          "Standard_F1s",
          "Standard_F2s",
          "Standard_F4s",
          "Standard_F8s",
          "Standard_F16s",
          "Standard_GS1",
          "Standard_GS2",
          "Standard_GS3",
          "Standard_GS4",
          "Standard_GS5",
          "Standard_L4s",
          "Standard_L8s",
          "Standard_L16s",
          "Standard_L32s"
        ],
        "metadata": {
          "description": "sku to use for the storage nodes - only premium disks VMs are allowed"
        }
      },
      "adminUsername": {
          "type": "String"
        },
      "adminPublicKey": {
          "type": "String"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
		"adminUserName": "[parameters('adminUserName')]",
		"templatelink": "[uri(deployment().properties.templateLink.uri, 'scripts')]",
		"lustreInstall": "[concat('bash install_lustre.sh ', 'meta ', variables('templatelink'))]",
        "virtualNetworkName": "lustre-vnet",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), 'nic')]",
		"networkSecurityGroupName": "lustre-nsg",
		"subnetName": "lustre-subnet",
		"addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressName": "[concat(parameters('virtualMachineName'), 'pip')]",
        "publicIPAddressType": "Dynamic",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
		"currentDataDiskSize" : "P30",
		"PremiumStorageMap": {
		  "P10": {
			"size": 128
		  },
		  "P20": {
			"size": 512
		  },
		  "P30": {
			"size": 1023
		  }
		},
		"metadataDiskArray": [
		  {
			"diskSizeGB": "[variables('PremiumStorageMap')[variables('currentDataDiskSize')].size]",
			"lun": "0",
			"createOption": "Empty"
		  }
		]
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[variables('location')]",
			"dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "OpenLogic",
                        "offer": "CentOS",
                        "sku": "7.3",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks":"[variables('metadataDiskArray')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }	
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2016-12-01",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterfaceName')]",
            "apiVersion": "2016-09-01",
            "location": "[variables('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('publicIpAddressName')]",
            "apiVersion": "2016-09-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "apiVersion": "2016-09-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
		   "apiVersion": "2015-06-15",
		   "type": "Microsoft.Compute/virtualMachines/extensions",
		   "name": "[concat(parameters('virtualMachineName'),'/installlustre')]",
		   "location": "[variables('location')]",
		   "dependsOn": [
             "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
		   "properties": {
			  "publisher": "Microsoft.Azure.Extensions",
			  "type": "CustomScript",
			  "typeHandlerVersion": "2.0",
			  "autoUpgradeMinorVersion":true,
			  "settings": {
				"fileUris": [
                  "[uri(deployment().properties.templateLink.uri, 'scripts/master-setup.sh')]",
                  "[uri(deployment().properties.templateLink.uri, 'scripts/install_lustre.sh')]"
                ],
				  "commandToExecute": "[concat('bash master-setup.sh ',variables('adminUserName'),'; ', variables('lustreInstall'))]"
			  }
		  }
	    }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}